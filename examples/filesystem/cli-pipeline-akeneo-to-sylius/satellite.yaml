satellite:
#  docker:
#    from: php:8.0-cli-alpine
#    workdir: /app
#    tags:
#      - kiboko/satellite:akeneo-to-sylius
  filesystem:
    path: build
  pipeline:
    steps:
    - akeneo:
        enterprise: true
        extractor:
          type: product
          method: all
          search:
            - { field: enabled, operator: '=', value: true }
            - { field: completeness, operator: '=', value: 100, scope: ecommerce }
        client:
          api_url: '@=env("AKENEO_URL")'
          client_id: '@=env("AKENEO_CLIENT_ID")'
          secret: '@=env("AKENEO_CLIENT_SECRET")'
          username: '@=env("AKENEO_USERNAME")'
          password: '@=env("AKENEO_PASSWORD")'
      logger:
        channel: pipeline
        destinations:
          - elasticsearch:
              level: warning
              hosts:
                - elasticsearch.example.com:9200
    - fastmap:
        expression_language:
          - 'Kiboko\Component\ExpressionLanguage\Akeneo\AkeneoFilterProvider'

        conditional:
          - condition: 'input["family"] === "clothing"'
            map:
              - field: '[code]'
                copy: '[identifier]'
              - field: '[family]'
                copy: '[family]'
              - field: '[translations][en_US]'
                expression: 'input'
                map:
                  - field: '[name]'
                    expression: 'attribute(input["values"]["variation_name"], locale("en_US"), scope("ecommerce"))'
                  - field: '[slug]'
                    expression: 'input["identifier"]'
                  - field: '[description]'
                    expression: 'attribute(input["values"]["description"], locale("en_US"), scope("ecommerce"))'
                  - field: '[composition]'
                    expression: 'attribute(input["values"]["composition"], locale(null), scope(null))'
                  - field: '[wash_temperature]'
                    expression: 'attribute(input["values"]["wash_temperature"], locale(null), scope(null))'
                  - field: '[care_instructions]'
                    expression: 'attribute(input["values"]["care_instructions"], locale(null), scope(null))'
                  - field: '[material]'
                    expression: 'attribute(input["values"]["material"], locale(null), scope(null))'
#          - condition: 'input["family"] === "led_tvs"'
#            map:
#              - field: '[code]'
#                copy: '[identifier]'
#              - field: '[family]'
#                copy: '[family]'
#              - field: '[translations][en_US]'
#                expression: 'input'
#                map:
#                  - field: '[name]'
#                    expression: 'attribute(input["values"]["variation_name"], locale("en_US"), scope("ecommerce"))'
#                  - field: '[slug]'
#                    expression: 'input["identifier"]'
#                  - field: '[description]'
#                    expression: 'attribute(input["values"]["description"], locale("en_US"), scope("ecommerce"))'
#          - condition: 'input["family"] === "accessories"'
#            map:
#              - field: '[code]'
#                copy: '[identifier]'
#              - field: '[family]'
#                copy: '[family]'
#              - field: '[translations][en_US]'
#                expression: 'input'
#                map:
#                  - field: '[name]'
#                    expression: 'attribute(input["values"]["variation_name"], locale("en_US"), scope("ecommerce"))'
#                  - field: '[slug]'
#                    expression: 'input["identifier"]'
#                  - field: '[composition]'
#                    expression: 'attribute(input["values"]["composition"], locale(null), scope(null))'
#                  - field: '[material]'
#                    expression: 'attribute(input["values"]["material"], locale(null), scope(null))'
#          - condition: 'true'
#            map:
#              - field: '[code]'
#                copy: '[identifier]'
#              - field: '[family]'
#                copy: '[family]'
      logger:
        channel: pipeline
        destinations:
          - elasticsearch:
              level: warning
              hosts:
                - elasticsearch.example.com:9200
    - sylius:
        loader:
          type: products
          method: create
        client:
          api_url: '@=env("AKENEO_URL")'
          client_id: '@=env("AKENEO_CLIENT_ID")'
          secret: '@=env("AKENEO_CLIENT_SECRET")'
          username: '@=env("AKENEO_USERNAME")'
          password: '@=env("AKENEO_PASSWORD")'
      logger:
        channel: pipeline
        destinations:
          - elasticsearch:
              level: warning
              hosts:
                - elasticsearch.example.com:9200
    - stream:
        loader:
          destination: 'stdout'
      logger:
        channel: pipeline
        destinations:
          - elasticsearch:
              level: warning
              hosts:
                - elasticsearch.example.com:9200
